#! /usr/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x565119962e40 .scope module, "pc_tb" "pc_tb" 2 3;
 .timescale 0 0;
v0x56511997e540_0 .var "clk", 0 0;
v0x56511997e600_0 .net "curr_addr", 4 0, v0x56511992a7b0_0;  1 drivers
v0x56511997e6d0_0 .var "jmp_addr", 4 0;
v0x56511997e7d0_0 .var "jmp_en", 0 0;
v0x56511997e8a0_0 .var "rst", 0 0;
v0x56511997e990_0 .var/i "test_idx", 31 0;
S_0x565119962fd0 .scope module, "UUT" "pc" 2 14, 3 3 0, S_0x565119962e40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk_i";
    .port_info 1 /INPUT 1 "rst_i";
    .port_info 2 /INPUT 1 "jmp_en_i";
    .port_info 3 /INPUT 5 "jmp_addr_i";
    .port_info 4 /OUTPUT 5 "addr_o";
v0x56511992a7b0_0 .var "addr_o", 4 0;
v0x56511992aba0_0 .net "clk_i", 0 0, v0x56511997e540_0;  1 drivers
v0x56511997e1e0_0 .net "jmp_addr_i", 4 0, v0x56511997e6d0_0;  1 drivers
v0x56511997e2d0_0 .net "jmp_en_i", 0 0, v0x56511997e7d0_0;  1 drivers
v0x56511997e390_0 .net "rst_i", 0 0, v0x56511997e8a0_0;  1 drivers
E_0x565119961c40 .event posedge, v0x56511992aba0_0;
    .scope S_0x565119962fd0;
T_0 ;
    %wait E_0x565119961c40;
    %load/vec4 v0x56511997e390_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 5;
    %assign/vec4 v0x56511992a7b0_0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0x56511997e2d0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    %load/vec4 v0x56511997e1e0_0;
    %assign/vec4 v0x56511992a7b0_0, 0;
    %jmp T_0.3;
T_0.2 ;
    %load/vec4 v0x56511992a7b0_0;
    %addi 1, 0, 5;
    %assign/vec4 v0x56511992a7b0_0, 0;
T_0.3 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x565119962e40;
T_1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x56511997e540_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x56511997e8a0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x56511997e7d0_0, 0, 1;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0x56511997e6d0_0, 0, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %end;
    .thread T_1;
    .scope S_0x565119962e40;
T_2 ;
    %load/vec4 v0x56511997e540_0;
    %inv;
    %store/vec4 v0x56511997e540_0, 0, 1;
    %delay 5, 0;
    %jmp T_2;
    .thread T_2;
    .scope S_0x565119962e40;
T_3 ;
    %vpi_call 2 24 "$dumpfile", "bin/pc.vcd" {0 0 0};
    %vpi_call 2 25 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x565119962e40 {0 0 0};
    %vpi_call 2 28 "$display", "-- Inicia Simulaci\303\263n --" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x56511997e8a0_0, 0, 1;
    %delay 25, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x56511997e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %vpi_call 2 33 "$display", "%d. Registro PC= %d ", v0x56511997e990_0, v0x56511997e600_0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x56511997e8a0_0, 0, 1;
    %delay 25, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x56511997e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %vpi_call 2 38 "$display", "%d. Registro PC= %d ", v0x56511997e990_0, v0x56511997e600_0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x56511997e8a0_0, 0, 1;
    %delay 25, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x56511997e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %vpi_call 2 43 "$display", "%d. Registro PC= %d ", v0x56511997e990_0, v0x56511997e600_0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x56511997e8a0_0, 0, 1;
    %delay 25, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x56511997e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %vpi_call 2 48 "$display", "%d. Registro PC= %d ", v0x56511997e990_0, v0x56511997e600_0 {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x56511997e7d0_0, 0, 1;
    %pushi/vec4 25, 0, 5;
    %store/vec4 v0x56511997e6d0_0, 0, 5;
    %delay 25, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x56511997e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %vpi_call 2 54 "$display", "%d. Registro PC= %d ", v0x56511997e990_0, v0x56511997e600_0 {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x56511997e8a0_0, 0, 1;
    %delay 25, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x56511997e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %vpi_call 2 59 "$display", "%d. Registro PC= %d ", v0x56511997e990_0, v0x56511997e600_0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x56511997e8a0_0, 0, 1;
    %delay 25, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x56511997e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %vpi_call 2 64 "$display", "%d . Registro PC= %d ", v0x56511997e990_0, v0x56511997e600_0 {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x56511997e8a0_0, 0, 1;
    %delay 25, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x56511997e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x56511997e990_0, 0, 32;
    %vpi_call 2 69 "$display", "%d. Registro PC= %d ", v0x56511997e990_0, v0x56511997e600_0 {0 0 0};
    %vpi_call 2 71 "$finish" {0 0 0};
    %vpi_call 2 72 "$display", "-- Testbench completed --" {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "test/pc_tb.v";
    "./src/pc.v";
